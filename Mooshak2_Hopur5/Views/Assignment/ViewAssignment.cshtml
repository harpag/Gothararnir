@model  Mooshak2_Hopur5.Models.ViewModels.AssignmentViewModel

@{
    ViewBag.Title = "ViewAssignment";
}

<h2>Assignment overview: @Model.AssignmentName</h2>

<div class="form-inline">
    <div class="list-group-item">
        <table>
            <tr><td>Description: @Model.AssignmentDescription </td></tr>
            <tr><td>Weight: @Model.Weight %</td></tr>
            <tr><td>Deadline: @Model.DueDate</td></tr>
            <tr><td>Max submissions: @Model.MaxSubmission</td></tr>
        </table>
        <h3>Parts</h3>
        @if (Model.AssignmentPartList.Any())
        {
            <div id="assignmentPart" class="list-group-item">
                <table class="table">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Description</th>
                            <th>Weight of part</th>
                            <th>Max submission</th>
                            <th></th>
                        </tr>
                    </thead>
                    @for (int i = 0; i < Model.AssignmentPartList.Count; i++)
                    {

                        <tr>
                            <td>@Model.AssignmentPartList[i].AssignmentPartName</td>
                            <td>@Model.AssignmentPartList[i].AssignmentPartDescription</td>
                            <td>Weight of part: @Model.AssignmentPartList[i].Weight %</td>
                            <td>Max submissions: @Model.AssignmentPartList[i].ProgrammingLanguageId</td>
                            @*<td>@Html.ActionLink("View test cases", "ViewTestCases", "Assignment", new { partId = Model.AssignmentPartList[i].AssignmentPartId, assignmentId = Model.AssignmentId }, new { @class = "btn btn-small btn-course" })</td>*@
                            <td>@Html.ActionLink("Add test case", "AddTestCaseToPart", "Assignment", new { partId = Model.AssignmentPartList[i].AssignmentPartId, assignmentId = Model.AssignmentId }, new { @class = "btn btn-small btn-assignment" })</td>
                        </tr>
                    }
                </table>
            </div>
        }
        @Html.ActionLink("Add part", "AddPartToAssignment", "Assignment", new { id = Model.AssignmentId }, new { @class = "btn btn-small btn-assignment" })
    </div>
    <div class="studentSubmissions">
        <h3>My submissions</h3>
        @if (Model.AssignmentSubmissionsList != null)
        {
            <table>
                <thead>
                    <tr>
                        <td>Submission id</td>
                        <td>Assignment part</td>
                        <td>Comment</td>
                        <td>Accepted</td>
                        <td>Number of sucess test cases</td>
                        <td>Test case failed</td>
                        <td>Error</td>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.AssignmentSubmissionsList)
                {
                        <tr>
                            <td>@item.submissionId</td>
                            <td>@item.assignmentPartId</td>
                            <td>@item.submissionComment</td>
                            <td>@item.accepted</td>
                            <td>@item.numberOfSucessTestCases</td>
                            <td>@item.testCaseFailId</td>
                            <td>@item.error</td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        @using (Html.BeginForm("ViewAssignment", "Assignment", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
        {
            <div id="row">
                <div class="col-md-6">
                    @Html.LabelFor(m => m.SubmissionUploaded, new { @class = "control-label" })
                    @Html.ValidationMessageFor(m => m.UserSubmission.assignmentPartId)
                    @Html.DropDownListFor(m => m.UserSubmission.assignmentPartId, (Model.AssignmentParts as SelectList), new { @class = "form-control", data_placeholder = "Agent(s)." })
                </div>
                <div class="col-md-6 product-attachment">
                    @Html.LabelFor(m => m.SubmissionUploaded, new { @class = "control-label" })
                    @Html.ValidationMessageFor(m => m.SubmissionUploaded)
                    @Html.TextBoxFor(m => m.SubmissionUploaded, new { type = "file", @class = "form-control" })
                </div>
            </div>
            <div class="row">
                @Html.TextBoxFor(m => m.AssignmentId, new { style = "visibility:hidden" })
                @Html.TextBoxFor(m => m.AssignmentName, new { style = "visibility:hidden" })
                @Html.TextBoxFor(m => m.AssignmentDescription, new { style = "visibility:hidden" })
                @Html.TextBoxFor(m => m.DueDate, new { style = "visibility:hidden" })
                @Html.TextBoxFor(m => m.UserAssignment.userId, new { style = "visibility:hidden" })
                <div class="col-md-9"></div>
                <button type="submit" class="col-md-3 btn btn-assignment">Hand in my solution</button>
            </div>
        }


            <div class="row">
                @Html.ActionLink("View submissions", "ViewSubmissions", "Assignment", new { assignmentId = Model.AssignmentId, courseId = Model.CourseId }, new { @class = "btn btn-small btn-assignment" })
            </div>
        
            </div>
</div>
